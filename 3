1

abstract class Monster {
  void attack();
}

class Goblin implements Monster {
  @override
  void attack() => print('고블린 어택');
}

abstract class Flyable {
  void fly();
}

class Bat implements Monster, Flyable {
  @override
  void attack() => print('햘퀴기');

  @override
  void fly() => print('난다');
}

void main() {
  Goblin m1 = Goblin();
  m1.attack();

  Bat m2 = Bat();
  m2.attack();
  m2.fly();

  print('');

  List<Monster> monsters = [m1, m2];
  monsters.forEach((m) {
    m.attack();

    if (m is Bat) {
      m.fly();
    }
  });
}

2

class Rectangle {
  num left, top, right, bottom;

  Rectangle(this.left, this.top, this.right, this.bottom);

  num get width => right - left;
  set width(num value) => right = left + value;

  num get height => bottom - top;
  set height(num value) => bottom = top + value;
}

void main() {
  var r = Rectangle(5, 10, 25, 35);

  print([r.left, r.top, r.right, r.bottom]);

  r.width = 10;
  r.right = 20;

  print([r.left, r.top, r.width, r.height]);
}
